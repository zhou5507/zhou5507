#include <iostream>
#include <iomanip>
#include <cmath>
#include <algorithm>
using namespace std;
double WX(double x,double &a,double &b,double&c) {
	double y{ 0 };
	y = 3 * a * pow(x, 2) + 2 * b * x + c;
	return y;
}
double F(double x, double& a, double& b, double& c,double &d) {
	double y{ 0 };
	y = a * pow(x, 3) + b * pow(x, 2) + c * x + d;
	return y;
}
void wx(double p,double &a, double& b, double& c, double& d) {
	double t{ 0 }, k{ 0 };
	t = p - F(p,a,b,c,d)/ WX(p,a,b,c);
	if (abs(p - t) < 0.005) {
		cout << fixed << setprecision(2) << t;
		return;
	}
	else {
		wx(t, a, b, c, d);
	}
}
int main() {
	double a{ 0 }, b{ 0 }, c{ 0 }, d{ 0 };
	cin >> a >> b >> c >> d;
	double X1{ 0 }, X2{ 0 }, X3{ 0 };
	X1 = (-2 * b + pow((4 * pow(b, 2) - 12 * a * c), 0.5)) /(6 * a)+abs(a)/a;
	X2 = (-2 * b - pow((4 * pow(b, 2) - 12 * a * c), 0.5)) / (6 * a)- abs(a)/ a;
	X3 = (X1 + X2) / 2;
	if (X1 > X2)swap(X1, X2);
	wx(X1, a, b, c, d);
	cout << " ";
	wx(X3, a, b, c, d);
	cout << " ";
	wx(X2, a, b, c, d);
}
